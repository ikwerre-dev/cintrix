// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id         String  @id @default(cuid())
  address    String  @unique
  handle     String  @unique
  displayName String?
  firstName  String?
  lastName   String?
  dateOfBirth DateTime?
  // New comprehensive profile fields
  email      String?
  phone      String?
  gender     String?
  bloodType  String?
  addressLine String?
  city       String?
  region     String?
  postalCode String?
  country    String?
  emergencyContactName  String?
  emergencyContactPhone String?
  // Encryption settings for medical records
  encryptionKey  String?
  encryptionSalt String?

  createdAt  DateTime @default(now())
  records    MedicalRecord[]
  notifications Notification[]
  card       MedicalCard?
  doctors    Doctor[]
  appointments Appointment[]
  insurances Insurance[]
}

enum MedicalRecordType {
  ILLNESS
  ALLERGY
  MEDICATION
  TEST_RESULT
  PROCEDURE
  IMMUNIZATION
  NOTE
  OTHER
}

model MedicalRecord {
  id         String   @id @default(cuid())
  userId     String
  title      String
  description String?
  type       MedicalRecordType @default(OTHER)
  warningNotes String?
  data       String
  hash       String?  // optional onchain hash reference
  createdAt  DateTime @default(now())

  user       User     @relation(fields: [userId], references: [id])

  @@index([userId])
}

model Insurance {
  id        String   @id @default(cuid())
  userId    String
  provider  String
  policyNumber String?
  coverage  String?
  phone     String?
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])

  @@index([userId])
}

// Add Notification model for medical dashboard
model Notification {
  id        String   @id @default(cuid())
  userId    String
  type      String?
  title     String
  message   String

  isRead    Boolean  @default(false)
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])

  @@index([userId])
}

// Medical card metadata for on-card display and privacy settings
model MedicalCard {
  id            String   @id @default(cuid())
  userId        String   @unique
  color         String   @default("#194dbe")
  text          String?
  visibleFields Json?
  viewsCount    Int      @default(0)
  viewsByDay    Json?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user          User     @relation(fields: [userId], references: [id])
}

model Doctor {
  id        String   @id @default(cuid())
  userId    String
  name      String
  specialty String?
  phone     String?
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
  appointments Appointment[]

  @@index([userId])
}

model Appointment {
  id        String   @id @default(cuid())
  userId    String
  doctorId  String
  date      DateTime
  reason    String?
  notes     String?
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
  doctor    Doctor   @relation(fields: [doctorId], references: [id])

  @@index([userId])
  @@index([doctorId])
}
